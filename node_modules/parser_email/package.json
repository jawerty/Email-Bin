{
  "name": "parser_email",
  "main": "./parser_email.js",
  "description": "Simple multi part email parser",
  "homepage": "http://github.com/jrgns/parser_email",
  "version": "0.2.2",
  "engine": [
    "JavaScript",
    "node >= v0.3.0-pre"
  ],
  "author": {
    "name": "J Jrgns du Toit",
    "email": "jrgns@jadeit.co.za"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/jrgns/parser_email"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/jrgns/parser_email/raw/master/License.md"
    }
  ],
  "readme": "parser_email\n============\n\nI needed a parser for Email, so I wrote one. At the moment it doesn't do much but parse the headers. Feel free to contribute.\n\nInstall\n-------\n\nnpm install parser_email\n\nExample\n-------\n\nThis assumes that the file is saved somewhere on the file system, but it can easily be any type of incoming stream.\n\n    var   fs        = require('fs')\n        , util      = require('util')\n        , em_parse  = require('parser_email')\n\n    var mail = '';\n    var path_to_email = '~/emails/email.eml';\n\n    stream = fs.ReadStream(path_to_email);\n    stream.setEncoding('ascii');\n\n    stream.on('data', function(data) {\n    \tmail += data;\n    });\n\n    stream.on('close', function () {\n    \tparser = new EParser(mail);\n\n        //At the moment Email Parser emit's one event: part\n        parser.on('part', function (type, body) {\n            util.log('Received a part of type ' + type);\n        });\n\n        parser.execute();\n    });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jrgns/parser_email/issues"
  },
  "_id": "parser_email@0.2.2",
  "dist": {
    "shasum": "98d47c2f5d29b249f49ddc78af3bd56e580452a3"
  },
  "_from": "parser_email@",
  "_resolved": "https://registry.npmjs.org/parser_email/-/parser_email-0.2.2.tgz"
}
